/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java.myapp;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.MongoClient;
import java.awt.ComponentOrientation;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.UnknownHostException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import org.json.JSONObject;

/**
 *
 * @author Acer
 */
public class Queueuser extends javax.swing.JFrame {

    DBCollection table;
    DB db;
    JSONObject Data;
    DefaultTableModel model;

    public Queueuser() {
        initComponents();
        //แสดงเวลา
        showTime();
    }

    public Queueuser(String data) {
        initComponents();
        showTime();
        setJCombo();
        //ดึงข้อมูล User และ Number มาแสดง
        Data = new JSONObject(data);
        u.setText(Data.getString("Username"));
        n.setText(Data.getString("Number"));

        //สร้างคอลัมน์ในตาราง
        model = new DefaultTableModel();
        model.addColumn("#");
        model.addColumn("FirstTime");
        model.addColumn("Number");
        model.addColumn("ID CARD");
        model.addColumn("passenger");

        DisplayTB.setModel(model);
        model.setRowCount(0);

        //การรันให้โปรแกรมเป็นเรียลทาม
        try{
        new Thread(new getDataQueue(DisplayTB, this)).start();
        cb.removeAllItems();
        }catch(Exception e){
            
        }

    }

    //เวลา
    void showTime() {

        new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {
                Date d = new Date();
                SimpleDateFormat s = new SimpleDateFormat("hh:mm:ss a");
                ti.setText(s.format(d));
            }
        }).start();
    }

    public void setJCombo() {
        BasicDBObject document = new BasicDBObject();
        MongoClient mongo;

        //เอาข้อมูล user มาแสดงที่ combobox
        try {
            mongo = new MongoClient("localhost", 27017);
            DB db = mongo.getDB("mini");
            DBCollection table = db.getCollection("passenger");

            DBCursor c = table.find();
            int i = 0;
            while (c.hasNext()) {
                i++;

                String Row = c.next().toString();
                JSONObject obj = new JSONObject(Row);
                cb.addItem(obj.getString("Username"));

            } 
        } catch (Exception e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        n = new javax.swing.JTextField();
        ti = new javax.swing.JTextField();
        u = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DisplayTB = new javax.swing.JTable();
        g1 = new javax.swing.JRadioButton();
        r1 = new javax.swing.JRadioButton();
        cb1 = new javax.swing.JComboBox<>();

        jLabel15.setText("jLabel15");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("TH Sarabun New", 1, 24)); // NOI18N
        jLabel2.setText("User : ");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 109, -1, -1));

        jLabel3.setFont(new java.awt.Font("TH Sarabun New", 1, 24)); // NOI18N
        jLabel3.setText("Number : ");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 161, -1, -1));

        jLabel4.setFont(new java.awt.Font("TH Sarabun New", 1, 24)); // NOI18N
        jLabel4.setText("Time : ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 110, -1, -1));
        getContentPane().add(n, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 140, 33));

        ti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tiActionPerformed(evt);
            }
        });
        getContentPane().add(ti, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 110, 100, 30));

        u.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uActionPerformed(evt);
            }
        });
        getContentPane().add(u, new org.netbeans.lib.awtextra.AbsoluteConstraints(62, 109, 169, 34));

        jButton1.setBackground(new java.awt.Color(102, 102, 255));
        jButton1.setFont(new java.awt.Font("TH Sarabun New", 1, 20)); // NOI18N
        jButton1.setText("Enter");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 430, 70, -1));

        jButton2.setBackground(new java.awt.Color(102, 102, 255));
        jButton2.setFont(new java.awt.Font("TH Sarabun New", 1, 20)); // NOI18N
        jButton2.setText("Out");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, 70, -1));

        jButton3.setBackground(new java.awt.Color(102, 102, 255));
        jButton3.setFont(new java.awt.Font("TH Sarabun New", 1, 20)); // NOI18N
        jButton3.setText("Logout");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 470, 190, -1));

        DisplayTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(DisplayTB);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 520, 100));

        g1.setBackground(new java.awt.Color(255, 204, 0));
        g1.setFont(new java.awt.Font("TH Sarabun New", 1, 22)); // NOI18N
        g1.setText("General Passenger");
        g1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g1ActionPerformed(evt);
            }
        });
        getContentPane().add(g1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, -1, -1));

        r1.setBackground(new java.awt.Color(255, 204, 0));
        r1.setFont(new java.awt.Font("TH Sarabun New", 1, 22)); // NOI18N
        r1.setText("Regular Passenger");
        r1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                r1ActionPerformed(evt);
            }
        });
        getContentPane().add(r1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));

        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });
        getContentPane().add(cb1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 370, 150, 30));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //กดเข้าคิว
        BasicDBObject document = new BasicDBObject();
        MongoClient mongo;
        try {
            mongo = new MongoClient("localhost", 27017);
            db = mongo.getDB("mini");
            table = db.getCollection("queues");
        } catch (UnknownHostException ex) {
            Logger.getLogger(รวมม.class.getName()).log(Level.SEVERE, null, ex);
        }
        //เมื่อกดเข้าต่อคิว ข้อมูลจะบันทึกลงฐานข้อมูล
        try{
        document.put("FirstTime", ti.getText());
        document.put("Number", n.getText());
        document.put("ID CARD", Data.getString("ID CARD"));
        document.put("passenger", cb.getItemCount());
        }catch(Exception e){
            
        }

        if (g1.isSelected()) {
            document.put("passenger", g1.getText());
        } else {
            document.put("passenger", r1.getText());
        }
        table.insert(document);
        JOptionPane.showMessageDialog(null, "Success!!!");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //ออกส่งลูกค้า
        BasicDBObject document = new BasicDBObject();
        BasicDBObject document2 = new BasicDBObject();
        MongoClient mongo;
        try {
            mongo = new MongoClient("localhost", 27017);
            db = mongo.getDB("mini");
            table = db.getCollection("queues");
        } catch (UnknownHostException ex) {
            Logger.getLogger(รวมม.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (g1.isSelected()) {
            r1.setSelected(false);
            document.put("ID CARD", Data.getString("ID CARD"));
            table.remove(document);

        } else if (r1.isSelected()) {
            g1.setSelected(false);

            document.put("ID CARD", Data.getString("ID CARD"));

            //กดส่งลูกค้าแล้ว ข้อมูลในตารางของ User นั้น หายไป
            table.remove(document);

            //บวกจำนวนครั้งของลูกค้าประจำ
            table = db.getCollection("passenger");
            document2.put("Username", cb.getSelectedItem().toString());
            BasicDBObject action = new BasicDBObject().append("$inc", new BasicDBObject().append("Count", 1));
            table.update(document2, action);

            JOptionPane.showMessageDialog(null, "Success!!!");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void r1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_r1ActionPerformed
        
        //เช็คว่าเลือก General Passenger หรือ Regula Passenger
        BasicDBObject document = new BasicDBObject();
        if (r1.isSelected()) {
            g1.setSelected(false);
            document.put("General Passenger", r1.getText());

            MongoClient mongo;

            try {
                mongo = new MongoClient("localhost", 27017);
                DB db = mongo.getDB("mini");
                DBCollection table = db.getCollection("passenger");

                DBCursor c = table.find();
                int i = 0;
                while (c.hasNext()) {
                    i++;

                    String Row = c.next().toString();
                    JSONObject obj = new JSONObject(Row);
                    cb.addItem(obj.getString("Username"));

                }
            } catch (Exception ex) {

            }
        } else if (g1.isSelected()) {
            r1.setSelected(false);
            document.put("General Passenger", g1.getText());

            MongoClient mongo;
            DBCursor c = table.find();
            String Row = c.next().toString();
            JSONObject obj = new JSONObject(Row);

            cb.removeItem(obj.getString("Username"));

        }

    }//GEN-LAST:event_r1ActionPerformed

    private void g1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g1ActionPerformed
        BasicDBObject document = new BasicDBObject();
        if (g1.isSelected()) {
            r1.setSelected(false);
            document.put("General Passenger", g1.getText());

            MongoClient mongo;

            try {
                mongo = new MongoClient("localhost", 27017);
                DB db = mongo.getDB("mini");
                DBCollection table = db.getCollection("passenger");

                DBCursor c = table.find();
                int i = 0;
                while (c.hasNext()) {
                    i++;

                    String Row = c.next().toString();
                    JSONObject obj = new JSONObject(Row);
                    cb.removeItem(obj.getString("Username"));

                }
            } catch (Exception ex) {

            }
        } else if (r1.isSelected()) {
            g1.setSelected(false);
            document.put("General Passenger", g1.getText());

            MongoClient mongo;
            DBCursor c = table.find();
            String Row = c.next().toString();
            JSONObject obj = new JSONObject(Row);
            cb.addItem(obj.getString("Username"));

        }


    }//GEN-LAST:event_g1ActionPerformed

    private void uActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        loginuser lg = new loginuser();
        lg.show();
        this.hide();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tiActionPerformed

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Queueuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Queueuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Queueuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Queueuser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Queueuser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DisplayTB;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JRadioButton g1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField n;
    private javax.swing.JRadioButton r1;
    private javax.swing.JTextField ti;
    private javax.swing.JTextField u;
    // End of variables declaration//GEN-END:variables
}
